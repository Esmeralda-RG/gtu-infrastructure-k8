name: Deploy to VPS

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure SSH access
        run: |
          set -e
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Verify SSH connection
        run: ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo SSH connection successful"

      - name: Copy docker-compose.yml to VPS
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:~/deploy

      - name: Deploy services with Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd ~/deploy
            docker compose pull 
            docker compose up -d --remove-orphans 
            docker system prune -f 
          EOF
      - name: Notify Slack on Success
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"✅ *Deployment successful!* 🚀\nRepository: `${{ github.repository }}`\nBranch: `${{ github.ref }}`\nCommit: `${{ github.sha }}`"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on Failure
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"❌ *Deployment failed!* 🔥\nRepository: `${{ github.repository }}`\nBranch: `${{ github.ref }}`\nCommit: `${{ github.sha }}`"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

